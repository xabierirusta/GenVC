// Workflow details
manifest {
    author	    = 'Xabier Irusta' 
    name	    = 'GenVC' 
    description = 'Variant caller for human samples (hg38), originating from Illumina reads using GATK haplotypecaller/mutect2, delly and cnvkit'
    }

// Nextflow version required to run the pipeline
nextflowVersion = '24.10.2'

// Set parameters
params {
    help                    = false            // Parameter to display a help message about the pipeline
    input                   = null             // Directory for FASTQ files
    ref                     = "./ref/"         // Reference files directory
    bed                     = "./bed/"         // Reference exons bed files directory
    tools                   = "./tools/"       // Custom tools directory for files needed by the pipeline
    seq                     = 'p'              // "s" or "p"
    t                       = 4                // Number of threads to use
    input_type              = "WGS"            // Default value: 'WGS'. Can be set to 'WES' by the user.
    outDir                  = null             // Directory for output files
    normal                  = null             // Path to the normal control if working with tumor samples
    v                       = "germline"       // Type of samples to work with (germline / somatic)
    vcf                     = "./vcf/"         // Directory of the needed reference vcf files
    vep_cache               = null             // Dir of cache of GRCh38 for VEP to work (Prior installation)
}

// Fail a task if any command return non-zero exit code
shell = ['/bin/bash', '-euo', 'pipefail']

// PROCESS: Default process settings and specific configurations
process {
    cpus   = { params.t }         // Default CPU allocation
    memory = '20GB'
}

// EXECUTOR: Default executor configuration
executor {
    name = 'local'                      // Default executor (can be overridden by profiles)
    queueSize = 10                      // Max number of queued processes
}

process {
    // Set the default container for all processes
    container = 'nextflow/nextflow:24.10.2'

    // Specific process configurations
    withName:wes_trimming {
        container = 'staphb/trimmomatic:0.39'
    }

    withName:wes_trimming_s {
        container = 'staphb/trimmomatic:0.39'
    }

    withName:wgs_trimming {
        container = 'staphb/trimmomatic:0.39'
    }

    withName:wgs_trimming_s {
        container = 'staphb/trimmomatic:0.39'
    }

    withName:alignment {
        container = 'staphb/bwa:0.7.18'
    }
    
    withName:alignment_s {
        container = 'staphb/bwa:0.7.18'
    }

    withName:wes_bam_prep {
        container = 'staphb/samtools:1.21'
    }
    withName:picard_rrg {
        container = 'broadinstitute/picard:3.3.0'
    }

    withName:wgs_bam_prep {
        container = 'staphb/samtools:1.21'
    }

    withName:wes_alignment_filtration {
        container = 'staphb/samtools:1.21'
    }

    withName:wes_post_alignment {
        container = 'broadinstitute/picard:3.3.0'
    }

    withName:wgs_post_alignment {
        container = 'broadinstitute/picard:3.3.0'
    }

    withName:wes_annot_index {
        container = 'staphb/samtools:1.21'
    }

    withName:wgs_annot_index {
        container = 'staphb/samtools:1.21'
    }

    withName:vc_haplotypecaller {
        container = 'broadinstitute/gatk:4.6.1.0'
    }

    withName:vc_mutect2 {
        container = 'broadinstitute/gatk:4.6.1.0'            
    }

    withName:filter_haplotypecaller {
        container = 'broadinstitute/gatk:4.6.1.0'
    }

    withName:filter_mutect2 {
        container = 'broadinstitute/gatk:4.6.1.0'
        memory = '16 GB'                            // Allocate 16 GB of memory for the process
        cpus = { params.t }                         // Optionally, allocate 4 CPU cores
    }

    withName:vc_delly {
        container = 'dellytools/delly:v1.3.2'
    }

    withName:filter_delly {
        container = 'broadinstitute/gatk:4.6.1.0'
    }

    withName:vc_cnvkit_wes_noref {
        container = 'etal/cnvkit:0.9.11'
    }

    withName:vc_cnvkit_wes {
        container = 'etal/cnvkit:0.9.11'
    }

    withName:vc_cnvkit_wgs {
        container = 'etal/cnvkit:0.9.11'
    }

    withName:heatmap_cnvkit {
        container = 'etal/cnvkit:0.9.11'
    }

    withName:visualize_cnvkit {
        container = 'etal/cnvkit:0.9.11'
    }

    withName:variant_annotation {
        container = 'ensemblorg/ensembl-vep:release_113.3'
    }

    withName:final_index {
        container = 'staphb/bcftools:1.21'
    }
}

docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

// LOGGING
// Define timestamp, to avoid overwriting existing trace
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

// Produce a workflow diagram
dag {
  enabled = true
  file = "${params.outDir}/runInfo/GenVC_dag_${timestamp}.svg"
}

report {
  enabled = true
  file = "${params.outDir}/runInfo/GenVC_report_${timestamp}.html"
}

timeline {
  enabled = true
	overwrite = true
	file = "${params.outDir}/runInfo/GenVC_timeline_${timestamp}.html"
}

trace {
	enabled = true
	overwrite = true
  file = "${params.outDir}/runInfo/GenVC_trace_${timestamp}.txt"
  fields = 'process,name,status,queue,realtime,cpus,%cpu,memory,%mem,rss,env'
}
